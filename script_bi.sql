USE [GD2C2023]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
-------------------------------------------------------------------------------------------------
-----------------------------------DROP DE TABLES------------------------------------------------
-------------------------------------------------------------------------------------------------
IF OBJECT_ID('BI_SYSTEAM.BI_TIEMPO', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_TIEMPO
GO

IF OBJECT_ID('BI_SYSTEAM.BI_TIPO_OPERACION', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_TIPO_OPERACION
GO

IF OBJECT_ID('BI_SYSTEAM.BI_RANGO_M2', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_RANGO_M2
GO

IF OBJECT_ID('BI_SYSTEAM.BI_TIPO_INMUEBLE', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_TIPO_INMUEBLE
GO

IF OBJECT_ID('BI_SYSTEAM.BI_UBICACION', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_UBICACION
GO

IF OBJECT_ID('BI_SYSTEAM.BI_FACT_ANUNCIO', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
GO

IF OBJECT_ID('BI_SYSTEAM.BI_RANGO_ETARIO', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_RANGO_ETARIO
GO

IF OBJECT_ID('BI_SYSTEAM.BI_TIEMPO', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_TIEMPO
GO

IF OBJECT_ID('BI_SYSTEAM.BI_TIPO_MONEDA', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_TIPO_MONEDA
GO

IF OBJECT_ID('BI_SYSTEAM.BI_FACT_ANUNCIO', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
GO

IF OBJECT_ID('BI_SYSTEAM.BI_SUCURSAL', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_SUCURSAL
GO

IF OBJECT_ID('BI_SYSTEAM.BI_FACT_VENTA', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_FACT_VENTA
GO

IF OBJECT_ID('BI_SYSTEAM.BI_FACT_ALQUILER', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_FACT_ALQUILER
GO


IF OBJECT_ID('BI_SYSTEAM.BI_AMBIENTES', 'U') IS NOT NULL
    DROP TABLE BI_SYSTEAM.BI_AMBIENTES
GO

-------------------------------------------------------------------------------------------------
-----------------------------------DROP DE PROCEDURES--------------------------------------------
-------------------------------------------------------------------------------------------------

IF OBJECT_ID('BI_SYSTEAM.CARGAR_BI_TIEMPO') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_BI_TIEMPO
GO

IF OBJECT_ID('BI_SYSTEAM.CARGAR_DIM_TIPO_OPERACION') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_DIM_TIPO_OPERACION
GO

IF OBJECT_ID('BI_SYSTEAM.CARGAR_DIM_RANGO_M2') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_DIM_RANGO_M2
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_DIM_INMUEBLE') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_DIM_INMUEBLE
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_DIM_UBICACION') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_DIM_UBICACION
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_DIM_AMBIENTES') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_DIM_AMBIENTES
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_DIM_RANGO_ETARIO') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_DIM_RANGO_ETARIO
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_DIM_TIEMPO') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_DIM_TIEMPO
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_DIM_TIPO_MONEDA') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_DIM_TIPO_MONEDA
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_FACT_ANUNCIO') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_FACT_ANUNCIO
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_DIM_SUCURSAL') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_DIM_SUCURSAL
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_FACT_VENTA') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_FACT_VENTA
GO

IF OBJECT_ID ('BI_SYSTEAM.CARGAR_FACT_ALQUILER') IS NOT NULL
	DROP PROCEDURE SYSTEAM.CARGAR_FACT_ALQUILER
GO

-------------------------------------------------------------------------------------------------
-----------------------------------DROP DE FUNCTIONS---------------------------------------------
-------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------
-----------------------------------DROP DE VIEWS-------------------------------------------------
-------------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------------
--------------------------------------------SCHEMA-----------------------------------------------
-------------------------------------------------------------------------------------------------

IF EXISTS (SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'BI_SYSTEAM')
	DROP SCHEMA BI_SYSTEAM
GO

CREATE SCHEMA BI_SYSTEAM
GO

-------------------------------------------------------------------------------------------------
----------------------------------------CREATE TABLES--------------------------------------------
-------------------------------------------------------------------------------------------------
CREATE TABLE BI_SYSTEAM.BI_TIEMPO (
    ID_TIEMPO NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
    TIEMPO_ANIO INT,
    TIEMPO_CUATRIMESTRE INT,
    TIEMPO_MES INT
);

CREATE TABLE BI_SYSTEAM.BI_UBICACION (
    ID_UBICACION NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
    PROVINCIA NVARCHAR(255),
    LOCALIDAD NVARCHAR(255),
    BARRIO NVARCHAR(255)
);

CREATE TABLE BI_SYSTEAM.BI_SUCURSAL (
    ID_SUCURSAL NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
    SUCURSAL_NOMBRE NVARCHAR(255)
);

CREATE TABLE BI_SYSTEAM.BI_RANGO_ETARIO (
    ID_RANGO_ETARIO NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
    RANGO_ETARIO_DESCRIPCION NVARCHAR(255)
);

CREATE TABLE BI_SYSTEAM.BI_TIPO_INMUEBLE (
    ID_TIPO_INMUEBLE NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
    TIPO_INMUEBLE_DESCRIPCION NVARCHAR(255)
);

CREATE TABLE BI_SYSTEAM.BI_AMBIENTES (
    ID_AMBIENTES NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
    AMBIENTES_DESCRIPCION NVARCHAR(255)
);

CREATE TABLE BI_SYSTEAM.BI_RANGO_M2 (
    ID_RANGO_M2 NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
    RANGO_M2_DESCRIPCION NVARCHAR(255)
);

CREATE TABLE BI_SYSTEAM.BI_TIPO_OPERACION (
    ID_TIPO_OPERACION NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
    TIPO_OPERACION_DESCRIPCION NVARCHAR(255)
);

CREATE TABLE BI_SYSTEAM.BI_TIPO_MONEDA (
    ID_TIPO_MONEDA NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
    TIPO_MONEDA_DESCRIPCION NVARCHAR(255)
);


CREATE TABLE BI_SYSTEAM.BI_FACT_ANUNCIO (
	ID_TIPO_INMUEBLE NUMERIC(18,0),
	ID_RANGO_M2 NUMERIC(18,0),
--    ID_TIEMPO NUMERIC(18,0),
    ID_TIPO_OPERACION NUMERIC(18,0),
	ID_AMBIENTES NUMERIC(18,0),
	ID_SUCURSAL NUMERIC(18,0),
	ID_TIPO_MONEDA NUMERIC(18,0),
	ID_UBICACION NUMERIC(18,0),
	ID_RANGO_ETARIO NUMERIC(18,0),
	ID_AGENTE NUMERIC(18,0),
	ID_TIEMPO_FECHA_PUBLICACION NUMERIC(18,0),
    ID_TIEMPO_FECHA_FINALIZACION NUMERIC(18,0),
	ANUNCIO_ESTADO NVARCHAR(100),
	ANUNCIO_DIAS_PUBLICADO INT,
	ANUNCIO_PRECIO INT
	
	PRIMARY KEY(
	ID_SUCURSAL,
	ID_RANGO_ETARIO,
	ID_TIPO_INMUEBLE,
	ID_TIPO_OPERACION,
	ID_TIPO_MONEDA,
	ID_AMBIENTES,
	ID_RANGO_M2,
	ID_UBICACION,
	ID_AGENTE,
	ID_TIEMPO_FECHA_PUBLICACION,
    ID_TIEMPO_FECHA_FINALIZACION)
);

CREATE TABLE BI_SYSTEAM.BI_FACT_VENTA (
	ID_TIPO_INMUEBLE NUMERIC(18,0),
	ID_RANGO_M2 NUMERIC(18,0),
    ID_TIEMPO_FECHA NUMERIC(18,0),
	ID_TIPO_MONEDA NUMERIC(18,0),
	ID_UBICACION NUMERIC(18,0),
    PRECIO_VENTA NUMERIC(18,0),
	COMISION DECIMAL(18, 2)
	PRIMARY KEY(
	ID_TIEMPO_FECHA,
	ID_UBICACION,
	ID_TIPO_INMUEBLE,
	ID_TIPO_MONEDA,
	ID_RANGO_M2
	)
);

CREATE TABLE BI_SYSTEAM.BI_FACT_ALQUILER (
    ID_TIEMPO_FECHA_INICIO NUMERIC(18,0),
    ID_TIEMPO_FECHA_FIN NUMERIC(18,0),
	ID_TIEMPO_FECHA_PAGO NUMERIC(18,0),
	ID_TIEMPO_FECHA_PERIODO_INICIO NUMERIC(18,0),
	ID_TIEMPO_FECHA_PERIODO_FIN NUMERIC(18,0),

	ID_TIPO_MONEDA NUMERIC(18,0),
	ID_UBICACION NUMERIC(18,0),
	ID_RANGO_ETARIO NUMERIC(18,0),
	ALQUILER_PRECIO INT,
	ALQUILER_CUMPLIMIENTO INT
	
	PRIMARY KEY(
	ID_TIEMPO_FECHA_INICIO,
	ID_TIEMPO_FECHA_FIN,
	ID_UBICACION,
	ID_RANGO_ETARIO,
	ID_TIPO_MONEDA
	)
);
GO


-------------------
------- FKs -------
-------------------

--FK DE TABLA ANUNCIO

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_TIPO_INMUEBLE_BI
    FOREIGN KEY (ID_TIPO_INMUEBLE) 
    REFERENCES BI_SYSTEAM.BI_TIPO_INMUEBLE(ID_TIPO_INMUEBLE);

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_RANGO_M2_BI
    FOREIGN KEY (ID_RANGO_M2) 
    REFERENCES BI_SYSTEAM.BI_RANGO_M2(ID_RANGO_M2);

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_TIEMPO_FECHA_PUBLICACION_BI
    FOREIGN KEY (ID_TIEMPO_FECHA_PUBLICACION) 
    REFERENCES BI_SYSTEAM.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_TIEMPO_FECHA_FINALIZACION_BI
    FOREIGN KEY (ID_TIEMPO_FECHA_FINALIZACION) 
    REFERENCES BI_SYSTEAM.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_TIPO_OPERACION_BI
    FOREIGN KEY (ID_TIPO_OPERACION) 
    REFERENCES BI_SYSTEAM.BI_TIPO_OPERACION(ID_TIPO_OPERACION);

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_AMBIENTES_BI
    FOREIGN KEY (ID_AMBIENTES) 
    REFERENCES BI_SYSTEAM.BI_AMBIENTES(ID_AMBIENTES);

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_SUCURSAL_BI
    FOREIGN KEY (ID_SUCURSAL) 
    REFERENCES BI_SYSTEAM.BI_SUCURSAL(ID_SUCURSAL);

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_TIPO_MONEDA_BI
    FOREIGN KEY (ID_TIPO_MONEDA) 
    REFERENCES BI_SYSTEAM.BI_TIPO_MONEDA(ID_TIPO_MONEDA);

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_UBICACION_BI
    FOREIGN KEY (ID_UBICACION) 
    REFERENCES BI_SYSTEAM.BI_UBICACION(ID_UBICACION);

ALTER TABLE BI_SYSTEAM.BI_FACT_ANUNCIO
ADD CONSTRAINT FK_RANGO_ETARIO_BI
    FOREIGN KEY (ID_RANGO_ETARIO) 
    REFERENCES BI_SYSTEAM.BI_RANGO_ETARIO(ID_RANGO_ETARIO);


-- FK TABLA VENTA


ALTER TABLE BI_SYSTEAM.BI_FACT_VENTA
ADD CONSTRAINT FK_TIPO_INMUEBLE_VENTA_BI
    FOREIGN KEY (ID_TIPO_INMUEBLE) 
    REFERENCES BI_SYSTEAM.BI_TIPO_INMUEBLE(ID_TIPO_INMUEBLE);

ALTER TABLE BI_SYSTEAM.BI_FACT_VENTA
ADD CONSTRAINT FK_RANGO_M2_VENTA_BI
    FOREIGN KEY (ID_RANGO_M2) 
    REFERENCES BI_SYSTEAM.BI_RANGO_M2(ID_RANGO_M2);

ALTER TABLE BI_SYSTEAM.BI_FACT_VENTA
ADD CONSTRAINT FK_TIEMPO_FECHA_VENTA_BI
    FOREIGN KEY (ID_TIEMPO_FECHA) 
    REFERENCES BI_SYSTEAM.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE BI_SYSTEAM.BI_FACT_VENTA
ADD CONSTRAINT FK_TIPO_MONEDA_VENTA_BI
    FOREIGN KEY (ID_TIPO_MONEDA) 
    REFERENCES BI_SYSTEAM.BI_TIPO_MONEDA(ID_TIPO_MONEDA);

ALTER TABLE BI_SYSTEAM.BI_FACT_VENTA
ADD CONSTRAINT FK_UBICACION_VENTA_BI
    FOREIGN KEY (ID_UBICACION) 
    REFERENCES BI_SYSTEAM.BI_UBICACION(ID_UBICACION);


-- FK TABLA ALQUILER


ALTER TABLE BI_SYSTEAM.BI_FACT_ALQUILER
ADD CONSTRAINT FK_TIEMPO_FECHA_INICIO_BI
    FOREIGN KEY (ID_TIEMPO_FECHA_INICIO) 
    REFERENCES BI_SYSTEAM.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE BI_SYSTEAM.BI_FACT_ALQUILER
ADD CONSTRAINT FK_TIEMPO_FECHA_FIN_BI
    FOREIGN KEY (ID_TIEMPO_FECHA_FIN) 
    REFERENCES BI_SYSTEAM.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE BI_SYSTEAM.BI_FACT_ALQUILER
ADD CONSTRAINT FK_TIEMPO_FECHA_PAGO_BI
    FOREIGN KEY (ID_TIEMPO_FECHA_PAGO) 
    REFERENCES BI_SYSTEAM.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE BI_SYSTEAM.BI_FACT_ALQUILER
ADD CONSTRAINT FK_TIEMPO_FECHA_PERIODO_INICIO_BI
    FOREIGN KEY (ID_TIEMPO_FECHA_PERIODO_INICIO) 
    REFERENCES BI_SYSTEAM.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE BI_SYSTEAM.BI_FACT_ALQUILER
ADD CONSTRAINT FK_TIEMPO_FECHA_PERIODO_FIN_BI
    FOREIGN KEY (ID_TIEMPO_FECHA_PERIODO_FIN) 
    REFERENCES BI_SYSTEAM.BI_TIEMPO(ID_TIEMPO);

	
ALTER TABLE BI_SYSTEAM.BI_FACT_ALQUILER
ADD CONSTRAINT FK_TIPO_MONEDA_ALQUILER_BI
    FOREIGN KEY (ID_TIPO_MONEDA) 
    REFERENCES BI_SYSTEAM.BI_TIPO_MONEDA(ID_TIPO_MONEDA);

ALTER TABLE BI_SYSTEAM.BI_FACT_ALQUILER
ADD CONSTRAINT FK_UBICACION_ALQUILER_BI
    FOREIGN KEY (ID_UBICACION) 
    REFERENCES BI_SYSTEAM.BI_UBICACION(ID_UBICACION);

ALTER TABLE BI_SYSTEAM.BI_FACT_ALQUILER
ADD CONSTRAINT FK_RANGO_ETARIO_ALQUILER_BI
    FOREIGN KEY (ID_RANGO_ETARIO) 
    REFERENCES BI_SYSTEAM.BI_RANGO_ETARIO(ID_RANGO_ETARIO);


GO




-------------------
--- FUNCIONES ----
-------------------


CREATE FUNCTION BI_SYSTEAM.FX_CALCULAR_RANGO_ETARIO_EMPLEADO(@EMPLEADO INT)
RETURNS INT
BEGIN
	DECLARE @FECHA_NACIMIENTO SMALLDATETIME
	DECLARE @EDAD INT
	DECLARE @ID_RANGO_ETARIO_EMPLEADO INT
	SET @FECHA_NACIMIENTO = (SELECT AGENTE_FECHA_NAC
							FROM SYSTEAM.AGENTE
							WHERE AGENTE_CODIGO = @EMPLEADO)
	SET @EDAD = YEAR(GETDATE()) - YEAR(@FECHA_NACIMIENTO)

	IF @EDAD < 25
		SET @ID_RANGO_ETARIO_EMPLEADO = 1
	ELSE IF @EDAD BETWEEN  25 AND 35
		SET @ID_RANGO_ETARIO_EMPLEADO = 2
	ELSE IF @EDAD BETWEEN 35 AND 50
		SET @ID_RANGO_ETARIO_EMPLEADO = 3
	ELSE IF @EDAD > 50
		SET @ID_RANGO_ETARIO_EMPLEADO = 4

RETURN @ID_RANGO_ETARIO_EMPLEADO
END
GO



CREATE FUNCTION BI_SYSTEAM.FX_CALCULAR_RANGO_METROS(@INMUEBLE INT)
RETURNS INT
BEGIN
	DECLARE @SUPERFICIE numeric(18, 2)
	DECLARE @ID_RANGO_METROS INT

	SET @SUPERFICIE = (SELECT i.INMUEBLE_SUPERFICIETOTAL
					   FROM SYSTEAM.INMUEBLE i
					   WHERE i.INMUEBLE_CODIGO = @INMUEBLE)

	IF @SUPERFICIE < 35
		SET @ID_RANGO_METROS = 1
	ELSE IF @SUPERFICIE BETWEEN 35 AND 55
		SET @ID_RANGO_METROS = 2
	ELSE IF @SUPERFICIE BETWEEN 55 AND 75
		SET @ID_RANGO_METROS = 3
	ELSE IF @SUPERFICIE BETWEEN 75 AND 100
		SET @ID_RANGO_METROS = 4
	ELSE IF @SUPERFICIE > 100
		SET @ID_RANGO_METROS = 5

RETURN @ID_RANGO_METROS
END
GO

-------------------
--- PROCEDURES ----
-------------------
CREATE PROCEDURE BI_SYSTEAM.CARGAR_BI_TIEMPO AS
BEGIN
	INSERT INTO BI_SYSTEAM.BI_TIEMPO(TIEMPO_ANIO, TIEMPO_CUATRIMESTRE, TIEMPO_MES)
	SELECT
		Anio,
		Cuatrimestre,
		Mes
	FROM
	(	SELECT
		YEAR(fecha) AS Anio,
		DATEPART(QUARTER, fecha) AS Cuatrimestre,
		MONTH(fecha) AS Mes
		FROM
		(	SELECT ANUNCIO_FECHA_PUBLICACION AS fecha FROM SYSTEAM.ANUNCIO
				UNION ALL
			SELECT ANUNCIO_FECHA_FINALIZACION FROM SYSTEAM.ANUNCIO
				UNION ALL
			SELECT VENTA_FECHA FROM SYSTEAM.Venta
				UNION ALL
			SELECT ALQUILER_FECHA_INICIO FROM SYSTEAM.Alquiler
				UNION ALL
			SELECT ALQUILER_FECHA_FIN  FROM SYSTEAM.Alquiler
				UNION ALL
			SELECT PAGO_ALQUILER_FECHA FROM SYSTEAM.Pago_Alquiler
				UNION ALL
			SELECT PAGO_ALQUILER_FECHA_INI FROM SYSTEAM.Pago_Alquiler
				UNION ALL
			SELECT PAGO_ALQUILER_FECHA_FIN FROM SYSTEAM.Pago_Alquiler
		) AS fechas
	) AS resultado
	GROUP BY
	Anio,
	Cuatrimestre,
	Mes
	ORDER BY
	Anio,
	Mes;

END
GO



CREATE PROCEDURE BI_SYSTEAM.CARGAR_BI_FACT_ANUNCIO
AS
BEGIN
INSERT INTO BI_SYSTEAM.BI_FACT_ANUNCIO(
	ID_TIPO_INMUEBLE,
	ID_RANGO_M2,
--	ID_TIEMPO,
	ID_TIPO_OPERACION,
	ID_AMBIENTES,
	ID_SUCURSAL,
	ID_TIPO_MONEDA,
	ID_UBICACION,
	ID_RANGO_ETARIO,
	ID_AGENTE,
	ID_TIEMPO_FECHA_PUBLICACION,
    ID_TIEMPO_FECHA_FINALIZACION,
	ANUNCIO_ESTADO,
	ANUNCIO_DIAS_PUBLICADO,
	ANUNCIO_PRECIO

)
SELECT DISTINCT
   bti.INMUEBLE_TIPO_CODIGO , --TIPO INMUEBLES
   rm.ID_RANGO_M2, --RANGO METROS CUADRADOS
   tiop.ID_TIPO_OPERACION, --TIPO OPERACION
   amb.INMUEBLE_CANT_AMBIENTES_CODIGO,   -- AMBIENTES
   bs.SUCURSAL_CODIGO , --SUCURSALES
   tm.ID_TIPO_MONEDA, --TIPO MONEDA
   bb.BARRIO_CODIGO , --BARRIO
   re.ID_RANGO_ETARIO, --RANGO ETARIO EMPLEADO
   AG.AGENTE_CODIGO, -- AGENTE 
   T1.ID_TIEMPO, -- FECHA PUBLICACION
   T2.ID_TIEMPO,-- FECHA FINALIZACION
   a.ANUNCIO_ESTADO,-- ESTADO
   AVG(DATEDIFF(DAY, a.ANUNCIO_FECHA_PUBLICACION, a.ANUNCIO_FECHA_FINALIZACION )), -- DIAS PUBLICADO
   a.ANUNCIO_PRECIO_PUBLICADO -- PRECIO
   
FROM SYSTEAM.ANUNCIO a
JOIN SYSTEAM.INMUEBLE i ON i.INMUEBLE_CODIGO = a.ANUNCIO_CODIGO
JOIN SYSTEAM.BARRIO bb ON bb.BARRIO_CODIGO =  i.BARRIO_CODIGO
JOIN SYSTEAM.INMUEBLE_CANT_AMBIENTES amb ON amb.INMUEBLE_CANT_AMBIENTES_CODIGO = i.INMUEBLE_CANT_AMBIENTES_CODIGO
JOIN SYSTEAM.INMUEBLE_TIPO bti ON bti.INMUEBLE_TIPO_CODIGO = i.INMUEBLE_TIPO_CODIGO
JOIN SYSTEAM.AGENTE ag ON ag.AGENTE_CODIGO = a.AGENTE_CODIGO
JOIN SYSTEAM.SUCURSAL bs ON bs.SUCURSAL_CODIGO = ag.SUCURSAL_CODIGO
JOIN BI_SYSTEAM.BI_TIEMPO T1 ON T1.TIEMPO_ANIO = year(a.ANUNCIO_FECHA_PUBLICACION)  AND T1.TIEMPO_MES = month(a.ANUNCIO_FECHA_PUBLICACION)
JOIN BI_SYSTEAM.BI_TIEMPO T2 ON T2.TIEMPO_ANIO = year(a.ANUNCIO_FECHA_FINALIZACION) AND T2.TIEMPO_MES = month(a.ANUNCIO_FECHA_FINALIZACION)
--JOIN BI_SYSTEAM.BI_TIEMPO t ON t.TIEMPO_ANIO = DATEPART(YEAR,a.ANUNCIO_FECHA_PUBLICACION) AND t.TIEMPO_MES = DATEPART(MONTH, a.ANUNCIO_FECHA_PUBLICACION) AND t.TIEMPO_CUATRIMESTRE = DATEPART(QUARTER, a.ANUNCIO_FECHA_PUBLICACION)
JOIN BI_SYSTEAM.BI_TIPO_OPERACION tiop ON tiop.ID_TIPO_OPERACION = a.TIPO_ANUNCIO_CODIGO
JOIN BI_SYSTEAM.BI_RANGO_ETARIO re ON re.ID_RANGO_ETARIO = BI_SYSTEAM.FX_CALCULAR_RANGO_ETARIO_EMPLEADO(a.AGENTE_CODIGO)
JOIN BI_SYSTEAM.BI_RANGO_M2 rm ON rm.ID_RANGO_M2= BI_SYSTEAM.FX_CALCULAR_RANGO_METROS(a.INMUEBLE_CODIGO)
JOIN BI_SYSTEAM.BI_TIPO_MONEDA tm ON tm.ID_TIPO_MONEDA = a.MONEDA_CODIGO

	
END 
GO



CREATE PROCEDURE BI_SYSTEAM.CARGAR_FACT_ALQUILER
AS
BEGIN
INSERT INTO BI_SYSTEAM.BI_FACT_ALQUILER(

			ID_TIEMPO_FECHA_INICIO,
			ID_TIEMPO_FECHA_FIN,
			ID_TIEMPO_FECHA_PAGO,
			ID_TIEMPO_FECHA_PERIODO_INICIO,
			ID_TIEMPO_FECHA_PERIODO_FIN,

			ID_TIPO_MONEDA,
			ID_UBICACION,
			ID_RANGO_ETARIO,

			ALQUILER_PRECIO,
			ALQUILER_CUMPLIMIENTO
)
SELECT DISTINCT
	
	T1.ID_TIEMPO,
	T2.ID_TIEMPO,
	T3.ID_TIEMPO,
	T4.ID_TIEMPO,
	T5.ID_TIEMPO,

	tm.ID_TIPO_MONEDA, 
	bb.BARRIO_CODIGO ,
	re.ID_RANGO_ETARIO,
	
	pa.PAGO_ALQUILER_IMPORTE,
	a.ALQUILER_ESTADO

FROM SYSTEAM.ALQUILER a

JOIN SYSTEAM.INMUEBLE i ON i.INMUEBLE_CODIGO = a.ANUNCIO_CODIGO
JOIN SYSTEAM.PAGO_ALQUILER pa ON pa.ALQUILER_CODIGO = a.ALQUILER_CODIGO
JOIN SYSTEAM.BARRIO bb ON bb.BARRIO_CODIGO =  i.BARRIO_CODIGO
JOIN SYSTEAM.ANUNCIO aa ON aa.ANUNCIO_CODIGO = a.ANUNCIO_CODIGO
JOIN BI_SYSTEAM.BI_TIEMPO T1 ON T1.TIEMPO_ANIO = year(a.ALQUILER_FECHA_INICIO)  AND T1.TIEMPO_MES = month(a.ALQUILER_FECHA_INICIO)
JOIN BI_SYSTEAM.BI_TIEMPO T2 ON T2.TIEMPO_ANIO = year(a.ALQUILER_FECHA_FIN)  AND T2.TIEMPO_MES = month(a.ALQUILER_FECHA_FIN)
JOIN BI_SYSTEAM.BI_TIEMPO T3 ON T3.TIEMPO_ANIO = year(pa.PAGO_ALQUILER_FECHA_INI)  AND T3.TIEMPO_MES = month(pa.PAGO_ALQUILER_FECHA_INI)
JOIN BI_SYSTEAM.BI_TIEMPO T4 ON T4.TIEMPO_ANIO = year(pa.PAGO_ALQUILER_FECHA_FIN)  AND T4.TIEMPO_MES = month(pa.PAGO_ALQUILER_FECHA_FIN)
JOIN BI_SYSTEAM.BI_TIEMPO T5 ON T5.TIEMPO_ANIO = year(pa.PAGO_ALQUILER_FECHA)  AND T5.TIEMPO_MES = month(pa.PAGO_ALQUILER_FECHA)
--JOIN BI_SYSTEAM.BI_TIEMPO t ON t.TIEMPO_ANIO = DATEPART(YEAR,a.ANUNCIO_FECHA_PUBLICACION) AND t.TIEMPO_MES = DATEPART(MONTH, a.ANUNCIO_FECHA_PUBLICACION) AND t.TIEMPO_CUATRIMESTRE = DATEPART(QUARTER, a.ANUNCIO_FECHA_PUBLICACION)
JOIN BI_SYSTEAM.BI_TIPO_MONEDA tm ON tm.ID_TIPO_MONEDA = pa.MEDIO_PAGO_CODIGO
JOIN BI_SYSTEAM.BI_RANGO_ETARIO re ON re.ID_RANGO_ETARIO = BI_SYSTEAM.FX_CALCULAR_RANGO_ETARIO_EMPLEADO(aa.AGENTE_CODIGO)
END
GO




CREATE PROCEDURE BI_SYSTEAM.CARGAR_BI_TIPO_OPERACION
AS
BEGIN
INSERT INTO BI_SYSTEAM.BI_TIPO_OPERACION
SELECT DISTINCT
		TIPO_ANUNCIO_NOMBRE
FROM SYSTEAM.TIPO_ANUNCIO
END
GO

CREATE PROCEDURE BI_SYSTEAM.CARGAR_BI_AMBIENTES
AS
BEGIN
INSERT INTO BI_SYSTEAM.BI_AMBIENTES
SELECT DISTINCT
	INMUEBLE_CANT_AMBIENTES_DETALLE
FROM SYSTEAM.INMUEBLE_CANT_AMBIENTES
END
GO

CREATE PROCEDURE BI_SYSTEAM.CARGAR_BI_SUCURSAL
AS
BEGIN
INSERT INTO BI_SYSTEAM.BI_SUCURSAL
SELECT DISTINCT
	SUCURSAL_NOMBRE
FROM SYSTEAM.SUCURSAL
END
GO
CREATE PROCEDURE BI_SYSTEAM.CARGAR_BI_TIPO_MONEDA
AS
BEGIN

    INSERT INTO BI_SYSTEAM.BI_TIPO_MONEDA (TIPO_MONEDA_DESCRIPCION)
    SELECT DISTINCT(MONEDA_NOMBRE)
    FROM SYSTEAM.MONEDA sm
    WHERE sm.MONEDA_NOMBRE IS NOT NULL
      AND NOT EXISTS (
        SELECT 1
        FROM BI_SYSTEAM.BI_TIPO_MONEDA btm
        WHERE btm.TIPO_MONEDA_DESCRIPCION = sm.MONEDA_NOMBRE
      )
    ORDER BY MONEDA_NOMBRE DESC;
END;
GO

--MIGRACION DE BI_TIPO_INMUEBLE


CREATE PROCEDURE BI_SYSTEAM.CARGAR_BI_TIPO_INMUEBLE
AS
BEGIN

    INSERT INTO BI_SYSTEAM.BI_TIPO_INMUEBLE (TIPO_INMUEBLE_DESCRIPCION)
    SELECT DISTINCT(INMUEBLE_TIPO_DETALLE)
    FROM SYSTEAM.INMUEBLE_TIPO sit
    WHERE sit.INMUEBLE_TIPO_DETALLE IS NOT NULL
      AND NOT EXISTS (
        SELECT 1
        FROM BI_SYSTEAM.BI_TIPO_INMUEBLE bti
        WHERE bti.TIPO_INMUEBLE_DESCRIPCION = sit.INMUEBLE_TIPO_DETALLE
      )
    ORDER BY INMUEBLE_TIPO_DETALLE DESC;
END;
GO


--MIGRACION DE BI_RANGO_M2


CREATE PROCEDURE BI_SYSTEAM.CARGAR_BI_RANGO_M2
AS
BEGIN
    INSERT INTO BI_SYSTEAM.BI_RANGO_M2(RANGO_M2_DESCRIPCION)
    VALUES 
        ('<35'),
        ('35-55'),
        ('55-75'),
        ('75-100'),
        ('>100');
END;
GO

CREATE PROCEDURE BI_SYSTEAM.CARGAR_BI_RANGO_ETARIO
AS
BEGIN
    INSERT INTO BI_SYSTEAM.BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
    VALUES 
        ('<25'),
        ('25-35'),
        ('35-50'),
        ('>50')
END;
GO

EXEC BI_SYSTEAM.CARGAR_BI_TIEMPO
EXEC BI_SYSTEAM.CARGAR_BI_TIPO_MONEDA
EXEC BI_SYSTEAM.CARGAR_BI_TIPO_INMUEBLE
EXEC BI_SYSTEAM.CARGAR_BI_RANGO_M2
EXEC BI_SYSTEAM.CARGAR_BI_RANGO_ETARIO
EXEC BI_SYSTEAM.CARGAR_BI_SUCURSAL
EXEC BI_SYSTEAM.CARGAR_BI_TIPO_OPERACION
EXEC BI_SYSTEAM.CARGAR_BI_AMBIENTES
EXEC BI_SYSTEAM.CARGAR_BI_FACT_ANUNCIO
EXEC BI_SYSTEAM.CARGAR_BI_FACT_ALQUILER
EXEC BI_SYSTEAM.CARGAR_BI_FACT_VENTA





-------------------
--- VIEWS ----
-------------------


--VISTA 1:
CREATE VIEW BI_SYSTEAM.VISTA_PROMEDIO_DIAS_PUBLICADOS_ANUNCIOS AS 
	SELECT 
		YEAR(a.ANUNCIO_FECHA_PUBLICACION)				AS [Año publicacion anuncio],
		DATEPART(QUARTER, a.ANUNCIO_FECHA_PUBLICACION)	AS [Cuatrimestre publicacion anuncio],
		tipoOp.TIPO_OPERACION_DESCRIPCION				AS [Tipo Operacion],
		ambi.AMBIENTES_DESCRIPCION						AS [Ambientes],
		bar.BARRIO										AS [Barrio donde se publico el anuncio],
		ISNULL(AVG(a.ANUNCIO_DIAS_PUBLICADO),0)			AS [Duracion promedio en dias]
	FROM
		BI_SYSTEAM.BI_FACT_ANUNCIO a
		JOIN  BI_SYSTEAM.BI_UBICACION bar ON bar.ID_UBICACION = a.ID_UBICACION
		JOIN  BI_SYSTEAM.BI_TIPO_OPERACION tipoOp ON a.ID_TIPO_OPERACION = tipoOp.ID_TIPO_OPERACION
		JOIN  BI_SYSTEAM.BI_AMBIENTES ambi ON a.ID_AMBIENTES= ambi.ID_AMBIENTES
	GROUP BY
		YEAR(a.ANUNCIO_FECHA_FINALIZACION)	 ,
		DATEPART(QUARTER, a.ANUNCIO_FECHA_PUBLICACION)	,
		bar.BARRIO	,
		ambi.AMBIENTES_DESCRIPCION,
		tipoOp.TIPO_OPERACION_DESCRIPCION
GO


--VISTA 2:
CREATE VIEW BI_SYSTEAM.VISTA_PROMEDIO_ANUNCIOS_INMUEBLES AS
	SELECT 
		YEAR(a.ANUNCIO_FECHA_PUBLICACION)					AS [Año publicacion anuncio],
		DATEPART(QUARTER, a.ANUNCIO_FECHA_PUBLICACION)		AS [Cuatrimestre publicacion anuncio],
		tipoOp.TIPO_OPERACION_DESCRIPCION					AS [Tipo Operacion],
		tipoAmb.TIPO_INMUEBLE_DESCRIPCION					AS [Tipo Inmueble],
		tipoMon.TIPO_MONEDA_DESCRIPCION						AS [Moneda Detalle],
		AVG(ANUNCIO_PRECIO)									AS [Precio promedio],
		rM2.RANGO_M2_DESCRIPCION							AS [Rango M2] 
	FROM
		BI_SYSTEAM.BI_FACT_ANUNCIO a
		JOIN BI_SYSTEAM.BI_TIPO_OPERACION tipoOp ON a.ID_TIPO_OPERACION = tipoOp.ID_TIPO_OPERACION
		JOIN BI_SYSTEAM.BI_TIPO_INMUEBLE tipoAmb ON a.ID_TIPO_INMUEBLE = tipoAmb.ID_TIPO_INMUEBLE
		JOIN BI_SYSTEAM.BI_RANGO_M2 rM2 ON a.ID_RANGO_M2 = rM2.ID_RANGO_M2
		JOIN BI_SYSTEAM.BI_TIPO_MONEDA tipoMon ON a.ID_TIPO_MONEDA = tipoMon.ID_TIPO_MONEDA 
	GROUP BY
		YEAR(a.ANUNCIO_FECHA_PUBLICACION),
		DATEPART(QUARTER, a.ANUNCIO_FECHA_PUBLICACION),
		tipoOp.TIPO_OPERACION_DESCRIPCION,
		tipoAmb.TIPO_INMUEBLE_DESCRIPCION,
		rM2.RANGO_M2_DESCRIPCION,
		tipoMon.TIPO_MONEDA_DESCRIPCION	
GO

/*
--VISTA 3:
CREATE VIEW BI_SYSTEAM.VISTA_LOS_5_BARRIOS_MAS_ELEGIDOS_PARA_ALQUILAR AS
  SELECT TOP 5
    anio
    ,cuatrimestre
    ,id_rango_etario_inq
    ,id_barrio
    ,COUNT(DISTINCT id_alquiler) AS cant_alquileres_dados_de_alta
  FROM
    TERCER_MALON.BI_fact_alquiler
    JOIN TERCER_MALON.BI_tiempo ON BI_fact_alquiler.id_tiempo=BI_tiempo.id_tiempo
  --hacer joins
  GROUP BY anio, cuatrimestre, id_rango_etario_inq, id_barrio
  ORDER BY COUNT(DISTINCT id_alquiler) DESC
GO






--3 ------------------------------------------------------------------------------------------------------------------------------
CREATE VIEW TERCER_MALON.V_Alquiler_Barrios_Populares
AS
  SELECT
    TOP 5
    anio
    ,cuatrimestre
    ,id_rango_etario_inq
    ,id_barrio
    ,COUNT(DISTINCT id_alquiler) AS cant_alquileres_dados_de_alta
  FROM
    TERCER_MALON.BI_fact_alquiler
    JOIN TERCER_MALON.BI_tiempo ON BI_fact_alquiler.id_tiempo=BI_tiempo.id_tiempo
  --hacer joins
  GROUP BY anio, cuatrimestre, id_rango_etario_inq, id_barrio
  ORDER BY COUNT(DISTINCT id_alquiler) DESC
GO


--3 ------------------------------------------------------------------------------------------------------------------------------
CREATE VIEW DropTable.vista3 AS
SELECT
    cuatrimestre,
    id_rango_etario,
    [CANTIDAD ALQUILERES],
    barrio
FROM
    (
    SELECT
        cuatrimestre.cuatrimestre ,
        rango_etario.id_rango_etario,
        biU.barrio,
        COUNT(*) AS [CANTIDAD ALQUILERES],
        ROW_NUMBER() OVER (PARTITION BY cuatrimestre.cuatrimestre , rango_etario.id_rango_etario ORDER BY COUNT(*) DESC) AS RowNum,
        COUNT(*) OVER (PARTITION BY cuatrimestre.cuatrimestre , rango_etario.id_rango_etario) AS TotalRows
    FROM
        [DropTable].[BI_Tiempo] cuatrimestre
    CROSS JOIN
        [DropTable].[BI_Rango_etario] rango_etario
    LEFT JOIN
        [DropTable].[BI_Hecho_Alquiler] biA ON
            biA.id_rango_etario = rango_etario.id_rango_etario
            AND biA.id_tiempo_inicio  = cuatrimestre.id_tiempo
    INNER JOIN
        [DropTable].[BI_Tiempo] bt ON bt.id_tiempo = biA.id_tiempo_inicio
    INNER JOIN
        [DropTable].[BI_Ubicacion] biU ON biU.id_Ubicacion = biA.id_ubicacion
    INNER JOIN
        [DropTable].[BI_Rango_etario] bre ON bre.id_rango_etario = biA.id_rango_etario
    GROUP BY
        cuatrimestre.cuatrimestre ,
        rango_etario.id_rango_etario,
        biU.barrio
) AS RankedAlquileres
WHERE
    RowNum <= 5 OR TotalRows < 5
ORDER BY
    cuatrimestre,
    id_rango_etario,
    [CANTIDAD ALQUILERES] DESC;


     
SELECT * FROM DropTable.vista3



--3 ------------------------------------------------------------------------------------------------------------------------------
CREATE VIEW DATABASERS.MEJORES_BARRIOS
AS
SELECT TOP 5 BI_ALQUILER_BARRIO, COUNT(*), BI_TIEMPO_ANIO, BI_TIEMPO_CUATRIMESTRE FROM DATABASERS.BI_ALQUILER 
JOIN DATABASERS.BI_TIEMPO ON BI_ALQUILER_TIEMPO=BI_TIEMPO_CODIGO
JOIN DATABASERS.BI_RANGO_ETARIO ON BI_ALQUILER_RANGO_ETARIO = BI_RANGO_ETARIO_CODIGO
GROUP BY BI_ALQUILER_BARRIO, BI_TIEMPO_ANIO, BI_TIEMPO_CUATRIMESTRE
ORDER BY COUNT(*) DESC
GO








--COMANDO ELIMINAR FKS DE BI_SYSTEAM

/*
DECLARE @sql NVARCHAR(MAX);

-- Verificar si el esquema "BI_SYSTEAM" existe
IF EXISTS (
    SELECT 1
    FROM sys.schemas
    WHERE name = 'BI_SYSTEAM'
)
BEGIN
    -- Verificar si existen tablas en el esquema "BI_SYSTEAM"
    IF EXISTS (
        SELECT 1
        FROM INFORMATION_SCHEMA.TABLES t
        INNER JOIN sys.schemas s ON t.TABLE_SCHEMA = s.name
        WHERE s.name = 'BI_SYSTEAM'
    )
    BEGIN
        -- Verificar si existen restricciones de clave externa en el esquema "BI_SYSTEAM"
        IF EXISTS (
            SELECT 1
            FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS c
            INNER JOIN INFORMATION_SCHEMA.TABLES t ON c.TABLE_NAME = t.TABLE_NAME
            INNER JOIN sys.schemas s ON t.TABLE_SCHEMA = s.name
            WHERE c.CONSTRAINT_TYPE = 'FOREIGN KEY' AND s.name = 'BI_SYSTEAM'
        )
        BEGIN
            -- Generar comandos para eliminar restricciones de clave externa en el esquema "BI_SYSTEAM"
            SELECT @sql = COALESCE(@sql, '') + 'ALTER TABLE ' + s.name + '.' + t.TABLE_NAME + ' DROP CONSTRAINT ' + c.CONSTRAINT_NAME + ';
            '
            FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS c
            INNER JOIN INFORMATION_SCHEMA.TABLES t ON c.TABLE_NAME = t.TABLE_NAME
            INNER JOIN sys.schemas s ON t.TABLE_SCHEMA = s.name
            WHERE c.CONSTRAINT_TYPE = 'FOREIGN KEY' AND s.name = 'BI_SYSTEAM';

            -- Ejecutar los comandos para eliminar las restricciones
            EXEC sp_executesql @sql;
        END
        ELSE
        BEGIN
            PRINT 'No existen restricciones de clave externa en el esquema "BI_SYSTEAM".';
        END
    END
    ELSE
    BEGIN
        PRINT 'No hay tablas en el esquema "BI_SYSTEAM".';
    END
END
ELSE
BEGIN
    PRINT 'El esquema "BI_SYSTEAM" no existe.';
END


*/




--COMANDO ELIMINAR TODAS LAS TABLAS DE BI_SYSTEAM

/*
USE GD2C2023;

DECLARE @TableName NVARCHAR(MAX);
DECLARE cursor_tables CURSOR FOR
    SELECT TABLE_NAME
    FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA = 'BI_SYSTEAM' AND TABLE_TYPE = 'BASE TABLE';

OPEN cursor_tables;
FETCH NEXT FROM cursor_tables INTO @TableName;

WHILE @@FETCH_STATUS = 0
BEGIN
    DECLARE @DropTableCommand NVARCHAR(MAX);
    SET @DropTableCommand = 'DROP TABLE BI_SYSTEAM.' + @TableName;

    EXEC sp_executesql @DropTableCommand;

    FETCH NEXT FROM cursor_tables INTO @TableName;
END

CLOSE cursor_tables;
DEALLOCATE cursor_tables;
*/
